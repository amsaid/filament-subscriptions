<?php

use Illuminate\Database\Migrations\Migration;
use Illuminate\Database\Schema\Blueprint;
use Illuminate\Support\Facades\Schema;

return new class extends Migration
{
    public function up()
    {
        Schema::create('filament_currencies', function (Blueprint $table) {
            $table->id();
            $table->string('name')->unique();
            $table->string('icon')->nullable();
            $table->string('code');
            $table->softDeletes();
            $table->timestamps();
        });

        Schema::create('filament_plans', function (Blueprint $table) {
            $table->id();
            $table->string('name');
            $table->string('slug');
            $table->string('description')->nullable();
            $table->decimal('price')->default('0.00');
            $table->string('image')->nullable();
            $table->decimal('signup_fee')->default('0.00');
            $table->smallInteger('trial_period')->unsigned()->default(0);
            $table->enum('period',['Yearly','Monthly'])->default('Monthly');
            $table->smallInteger('active_subscribers_limit')->unsigned()->nullable();
            $table->mediumInteger('sort_order')->unsigned()->default(0);
            $table->boolean('status')->default(true);
            $table->unsignedBigInteger('currency_id')->unsigned();
            $table->softDeletes();
            $table->timestamps();

            $table->foreign('currency_id')
            ->references('id')->on('filament_currencies')
            ->onDelete('cascade')
            ->onUpdate('cascade');
        });

        Schema::create('filament_features', function (Blueprint $table) {
            $table->id();
            $table->string('name');
            $table->string('slug');
            $table->string('description')->nullable();
            $table->string('image')->nullable();
            $table->string('value');
            $table->smallInteger('resettable_period')->unsigned()->default(0);
            $table->string('resettable_interval')->default('month');
            $table->boolean('status')->default(true);
            $table->mediumInteger('sort_order')->unsigned()->default(0);
            $table->softDeletes();
            $table->timestamps();
        });

        Schema::create('filament_plan_features', function (Blueprint $table) {
            $table->id();
            $table->mediumInteger('sort_order')->unsigned()->default(0);
            $table->boolean('status')->default(true);
            $table->unsignedBigInteger('feature_id')->unsigned();
            $table->unsignedBigInteger('plan_id')->unsigned();
            $table->softDeletes();
            $table->timestamps();

            $table->foreign('feature_id')
            ->references('id')->on('filament_features')
            ->onDelete('cascade')
            ->onUpdate('cascade');

            $table->foreign('plan_id')
            ->references('id')->on('filament_plans')
            ->onDelete('cascade')
            ->onUpdate('cascade');
        });

        Schema::create('filament_plan_subscriptions', function (Blueprint $table) {
            $table->id();
            $table->string('name');
            $table->string('slug');
            $table->string('description')->nullable();
            $table->decimal('price')->default('0.00');
            $table->enum('period',['Yearly','Monthly','Trial'])->default('Monthly');
            $table->dateTime('trial_ends_at')->nullable();
            $table->dateTime('starts_at')->nullable();
            $table->dateTime('ends_at')->nullable();
            $table->dateTime('cancels_at')->nullable();
            $table->dateTime('canceled_at')->nullable();
            $table->string('timezone')->nullable();
            $table->dateTime('saw_it')->nullable();
            $table->boolean('is_paid')->default(false);
            $table->boolean('is_selected')->default(false);
            $table->morphs('subscriber');
            $table->unsignedBigInteger('plan_id')->unsigned();
            $table->softDeletes();
            $table->timestamps();

            $table->foreign('plan_id')
            ->references('id')
            ->on('filament_plans')
            ->onDelete('cascade')
            ->onUpdate('cascade');
        });
    }
};
